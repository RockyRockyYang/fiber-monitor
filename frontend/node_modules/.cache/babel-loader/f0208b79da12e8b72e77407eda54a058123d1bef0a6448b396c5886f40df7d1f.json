{"ast":null,"code":"var _jsxFileName = \"/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/GeocoderControl.js\",\n  _s = $RefreshSig$();\n// import {useControl} from 'react-map-gl';\n// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// import { MAPBOX_TOKEN } from './Const'\n\n// function GeocoderControl(props) {\n// \tconst coordinatesGeocoder = function (query) {\n// \t\tconsole.log('query:', query)\n// \t}\n\n// \tconst geocoder = useControl(() => {\n// \t\tconst control = new MapboxGeocoder({\n// \t\t\taccessToken: MAPBOX_TOKEN,\n// \t\t\tmarker: false,\n// \t\t\tlocalGeocoder: coordinatesGeocoder,\n// \t\t\tzoom: 5,\n// \t\t\tplaceholder: 'Try: -40, 170',\n// \t\t\treverseGeocode: true\n// \t\t})\n// \t\treturn control\n// \t},{\n// \t\tposition: props.position\n// \t}\n// \t)\n// }\n\n// const noop = () => {};\n\n// GeocoderControl.defaultProps = {\n//   marker: true,\n//   onLoading: noop,\n//   onResults: noop,\n//   onResult: noop,\n//   onError: noop\n// };\n\n// export default GeocoderControl;\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useControl, Marker, MarkerProps, ControlPosition } from 'react-map-gl';\nimport MapboxGeocoder, { GeocoderOptions } from '@mapbox/mapbox-gl-geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/* eslint-disable complexity,max-statements */\nexport default function GeocoderControl(props) {\n  _s();\n  const [marker, setMarker] = useState(null);\n  const geocoder = useControl < MapboxGeocoder > (() => {\n    const ctrl = new MapboxGeocoder({\n      ...props,\n      marker: false,\n      accessToken: props.mapboxAccessToken\n    });\n    ctrl.on('loading', props.onLoading);\n    ctrl.on('results', props.onResults);\n    ctrl.on('result', evt => {\n      var _result$geometry;\n      props.onResult(evt);\n      const {\n        result\n      } = evt;\n      const location = result && (result.center || ((_result$geometry = result.geometry) === null || _result$geometry === void 0 ? void 0 : _result$geometry.type) === 'Point' && result.geometry.coordinates);\n      if (location && props.marker) {\n        setMarker( /*#__PURE__*/_jsxDEV(Marker, {\n          ...props.marker,\n          longitude: location[0],\n          latitude: location[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this));\n      } else {\n        setMarker(null);\n      }\n    });\n    ctrl.on('error', props.onError);\n    return ctrl;\n  }, {\n    position: props.position\n  });\n\n  // @ts-ignore (TS2339) private member\n  if (geocoder._map) {\n    if (geocoder.getProximity() !== props.proximity && props.proximity !== undefined) {\n      geocoder.setProximity(props.proximity);\n    }\n    if (geocoder.getRenderFunction() !== props.render && props.render !== undefined) {\n      geocoder.setRenderFunction(props.render);\n    }\n    if (geocoder.getLanguage() !== props.language && props.language !== undefined) {\n      geocoder.setLanguage(props.language);\n    }\n    if (geocoder.getZoom() !== props.zoom && props.zoom !== undefined) {\n      geocoder.setZoom(props.zoom);\n    }\n    if (geocoder.getFlyTo() !== props.flyTo && props.flyTo !== undefined) {\n      geocoder.setFlyTo(props.flyTo);\n    }\n    if (geocoder.getPlaceholder() !== props.placeholder && props.placeholder !== undefined) {\n      geocoder.setPlaceholder(props.placeholder);\n    }\n    if (geocoder.getCountries() !== props.countries && props.countries !== undefined) {\n      geocoder.setCountries(props.countries);\n    }\n    if (geocoder.getTypes() !== props.types && props.types !== undefined) {\n      geocoder.setTypes(props.types);\n    }\n    if (geocoder.getMinLength() !== props.minLength && props.minLength !== undefined) {\n      geocoder.setMinLength(props.minLength);\n    }\n    if (geocoder.getLimit() !== props.limit && props.limit !== undefined) {\n      geocoder.setLimit(props.limit);\n    }\n    if (geocoder.getFilter() !== props.filter && props.filter !== undefined) {\n      geocoder.setFilter(props.filter);\n    }\n    if (geocoder.getOrigin() !== props.origin && props.origin !== undefined) {\n      geocoder.setOrigin(props.origin);\n    }\n    // Types missing from @types/mapbox__mapbox-gl-geocoder\n    // if (geocoder.getAutocomplete() !== props.autocomplete && props.autocomplete !== undefined) {\n    //   geocoder.setAutocomplete(props.autocomplete);\n    // }\n    // if (geocoder.getFuzzyMatch() !== props.fuzzyMatch && props.fuzzyMatch !== undefined) {\n    //   geocoder.setFuzzyMatch(props.fuzzyMatch);\n    // }\n    // if (geocoder.getRouting() !== props.routing && props.routing !== undefined) {\n    //   geocoder.setRouting(props.routing);\n    // }\n    // if (geocoder.getWorldview() !== props.worldview && props.worldview !== undefined) {\n    //   geocoder.setWorldview(props.worldview);\n    // }\n  }\n\n  return marker;\n}\n_s(GeocoderControl, \"+H+Jyh+AsXSbFxxRHGJi4eM97uA=\");\n_c = GeocoderControl;\nconst noop = () => {};\nGeocoderControl.defaultProps = {\n  marker: true,\n  onLoading: noop,\n  onResults: noop,\n  onResult: noop,\n  onError: noop\n};\nvar _c;\n$RefreshReg$(_c, \"GeocoderControl\");","map":{"version":3,"names":["React","useState","useControl","Marker","MarkerProps","ControlPosition","MapboxGeocoder","GeocoderOptions","jsxDEV","_jsxDEV","GeocoderControl","props","_s","marker","setMarker","geocoder","ctrl","accessToken","mapboxAccessToken","on","onLoading","onResults","evt","_result$geometry","onResult","result","location","center","geometry","type","coordinates","longitude","latitude","fileName","_jsxFileName","lineNumber","columnNumber","onError","position","_map","getProximity","proximity","undefined","setProximity","getRenderFunction","render","setRenderFunction","getLanguage","language","setLanguage","getZoom","zoom","setZoom","getFlyTo","flyTo","setFlyTo","getPlaceholder","placeholder","setPlaceholder","getCountries","countries","setCountries","getTypes","types","setTypes","getMinLength","minLength","setMinLength","getLimit","limit","setLimit","getFilter","filter","setFilter","getOrigin","origin","setOrigin","_c","noop","defaultProps","$RefreshReg$"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/GeocoderControl.js"],"sourcesContent":["// import {useControl} from 'react-map-gl';\n// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// import { MAPBOX_TOKEN } from './Const'\n\n// function GeocoderControl(props) {\n// \tconst coordinatesGeocoder = function (query) {\n// \t\tconsole.log('query:', query)\n// \t}\n\n// \tconst geocoder = useControl(() => {\n// \t\tconst control = new MapboxGeocoder({\n// \t\t\taccessToken: MAPBOX_TOKEN,\n// \t\t\tmarker: false,\n// \t\t\tlocalGeocoder: coordinatesGeocoder,\n// \t\t\tzoom: 5,\n// \t\t\tplaceholder: 'Try: -40, 170',\n// \t\t\treverseGeocode: true\n// \t\t})\n// \t\treturn control\n// \t},{\n// \t\tposition: props.position\n// \t}\n// \t)\n// }\n\n// const noop = () => {};\n\n// GeocoderControl.defaultProps = {\n//   marker: true,\n//   onLoading: noop,\n//   onResults: noop,\n//   onResult: noop,\n//   onError: noop\n// };\n\n// export default GeocoderControl;\n\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {useControl, Marker, MarkerProps, ControlPosition} from 'react-map-gl';\nimport MapboxGeocoder, {GeocoderOptions} from '@mapbox/mapbox-gl-geocoder';\n\ntype GeocoderControlProps = Omit<GeocoderOptions, 'accessToken' | 'mapboxgl' | 'marker'> & {\n  mapboxAccessToken: string;\n  marker?: boolean | Omit<MarkerProps, 'longitude' | 'latitude'>;\n\n  position: ControlPosition;\n\n  onLoading?: (e: object) => void;\n  onResults?: (e: object) => void;\n  onResult?: (e: object) => void;\n  onError?: (e: object) => void;\n};\n\n/* eslint-disable complexity,max-statements */\nexport default function GeocoderControl(props: GeocoderControlProps) {\n  const [marker, setMarker] = useState(null);\n\n  const geocoder = useControl<MapboxGeocoder>(\n    () => {\n      const ctrl = new MapboxGeocoder({\n        ...props,\n        marker: false,\n        accessToken: props.mapboxAccessToken\n      });\n      ctrl.on('loading', props.onLoading);\n      ctrl.on('results', props.onResults);\n      ctrl.on('result', evt => {\n        props.onResult(evt);\n\n        const {result} = evt;\n        const location =\n          result &&\n          (result.center || (result.geometry?.type === 'Point' && result.geometry.coordinates));\n        if (location && props.marker) {\n          setMarker(<Marker {...props.marker} longitude={location[0]} latitude={location[1]} />);\n        } else {\n          setMarker(null);\n        }\n      });\n      ctrl.on('error', props.onError);\n      return ctrl;\n    },\n    {\n      position: props.position\n    }\n  );\n\n  // @ts-ignore (TS2339) private member\n  if (geocoder._map) {\n    if (geocoder.getProximity() !== props.proximity && props.proximity !== undefined) {\n      geocoder.setProximity(props.proximity);\n    }\n    if (geocoder.getRenderFunction() !== props.render && props.render !== undefined) {\n      geocoder.setRenderFunction(props.render);\n    }\n    if (geocoder.getLanguage() !== props.language && props.language !== undefined) {\n      geocoder.setLanguage(props.language);\n    }\n    if (geocoder.getZoom() !== props.zoom && props.zoom !== undefined) {\n      geocoder.setZoom(props.zoom);\n    }\n    if (geocoder.getFlyTo() !== props.flyTo && props.flyTo !== undefined) {\n      geocoder.setFlyTo(props.flyTo);\n    }\n    if (geocoder.getPlaceholder() !== props.placeholder && props.placeholder !== undefined) {\n      geocoder.setPlaceholder(props.placeholder);\n    }\n    if (geocoder.getCountries() !== props.countries && props.countries !== undefined) {\n      geocoder.setCountries(props.countries);\n    }\n    if (geocoder.getTypes() !== props.types && props.types !== undefined) {\n      geocoder.setTypes(props.types);\n    }\n    if (geocoder.getMinLength() !== props.minLength && props.minLength !== undefined) {\n      geocoder.setMinLength(props.minLength);\n    }\n    if (geocoder.getLimit() !== props.limit && props.limit !== undefined) {\n      geocoder.setLimit(props.limit);\n    }\n    if (geocoder.getFilter() !== props.filter && props.filter !== undefined) {\n      geocoder.setFilter(props.filter);\n    }\n    if (geocoder.getOrigin() !== props.origin && props.origin !== undefined) {\n      geocoder.setOrigin(props.origin);\n    }\n    // Types missing from @types/mapbox__mapbox-gl-geocoder\n    // if (geocoder.getAutocomplete() !== props.autocomplete && props.autocomplete !== undefined) {\n    //   geocoder.setAutocomplete(props.autocomplete);\n    // }\n    // if (geocoder.getFuzzyMatch() !== props.fuzzyMatch && props.fuzzyMatch !== undefined) {\n    //   geocoder.setFuzzyMatch(props.fuzzyMatch);\n    // }\n    // if (geocoder.getRouting() !== props.routing && props.routing !== undefined) {\n    //   geocoder.setRouting(props.routing);\n    // }\n    // if (geocoder.getWorldview() !== props.worldview && props.worldview !== undefined) {\n    //   geocoder.setWorldview(props.worldview);\n    // }\n  }\n  return marker;\n}\n\nconst noop = () => {};\n\nGeocoderControl.defaultProps = {\n  marker: true,\n  onLoading: noop,\n  onResults: noop,\n  onResult: noop,\n  onError: noop\n};"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,UAAU,EAAEC,MAAM,EAAEC,WAAW,EAAEC,eAAe,QAAO,cAAc;AAC7E,OAAOC,cAAc,IAAGC,eAAe,QAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc3E;AACA,eAAe,SAASC,eAAeA,CAACC,KAA2B,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMc,QAAQ,GAAGb,UAAU,GAACI,cAAc,IACxC,MAAM;IACJ,MAAMU,IAAI,GAAG,IAAIV,cAAc,CAAC;MAC9B,GAAGK,KAAK;MACRE,MAAM,EAAE,KAAK;MACbI,WAAW,EAAEN,KAAK,CAACO;IACrB,CAAC,CAAC;IACFF,IAAI,CAACG,EAAE,CAAC,SAAS,EAAER,KAAK,CAACS,SAAS,CAAC;IACnCJ,IAAI,CAACG,EAAE,CAAC,SAAS,EAAER,KAAK,CAACU,SAAS,CAAC;IACnCL,IAAI,CAACG,EAAE,CAAC,QAAQ,EAAEG,GAAG,IAAI;MAAA,IAAAC,gBAAA;MACvBZ,KAAK,CAACa,QAAQ,CAACF,GAAG,CAAC;MAEnB,MAAM;QAACG;MAAM,CAAC,GAAGH,GAAG;MACpB,MAAMI,QAAQ,GACZD,MAAM,KACLA,MAAM,CAACE,MAAM,IAAK,EAAAJ,gBAAA,GAAAE,MAAM,CAACG,QAAQ,cAAAL,gBAAA,uBAAfA,gBAAA,CAAiBM,IAAI,MAAK,OAAO,IAAIJ,MAAM,CAACG,QAAQ,CAACE,WAAY,CAAC;MACvF,IAAIJ,QAAQ,IAAIf,KAAK,CAACE,MAAM,EAAE;QAC5BC,SAAS,eAACL,OAAA,CAACN,MAAM;UAAA,GAAKQ,KAAK,CAACE,MAAM;UAAEkB,SAAS,EAAEL,QAAQ,CAAC,CAAC,CAAE;UAACM,QAAQ,EAAEN,QAAQ,CAAC,CAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,CAAC;MACxF,CAAC,MAAM;QACLtB,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;IACFE,IAAI,CAACG,EAAE,CAAC,OAAO,EAAER,KAAK,CAAC0B,OAAO,CAAC;IAC/B,OAAOrB,IAAI;EACb,CAAC,EACD;IACEsB,QAAQ,EAAE3B,KAAK,CAAC2B;EAClB,CAAC,CACF;;EAED;EACA,IAAIvB,QAAQ,CAACwB,IAAI,EAAE;IACjB,IAAIxB,QAAQ,CAACyB,YAAY,EAAE,KAAK7B,KAAK,CAAC8B,SAAS,IAAI9B,KAAK,CAAC8B,SAAS,KAAKC,SAAS,EAAE;MAChF3B,QAAQ,CAAC4B,YAAY,CAAChC,KAAK,CAAC8B,SAAS,CAAC;IACxC;IACA,IAAI1B,QAAQ,CAAC6B,iBAAiB,EAAE,KAAKjC,KAAK,CAACkC,MAAM,IAAIlC,KAAK,CAACkC,MAAM,KAAKH,SAAS,EAAE;MAC/E3B,QAAQ,CAAC+B,iBAAiB,CAACnC,KAAK,CAACkC,MAAM,CAAC;IAC1C;IACA,IAAI9B,QAAQ,CAACgC,WAAW,EAAE,KAAKpC,KAAK,CAACqC,QAAQ,IAAIrC,KAAK,CAACqC,QAAQ,KAAKN,SAAS,EAAE;MAC7E3B,QAAQ,CAACkC,WAAW,CAACtC,KAAK,CAACqC,QAAQ,CAAC;IACtC;IACA,IAAIjC,QAAQ,CAACmC,OAAO,EAAE,KAAKvC,KAAK,CAACwC,IAAI,IAAIxC,KAAK,CAACwC,IAAI,KAAKT,SAAS,EAAE;MACjE3B,QAAQ,CAACqC,OAAO,CAACzC,KAAK,CAACwC,IAAI,CAAC;IAC9B;IACA,IAAIpC,QAAQ,CAACsC,QAAQ,EAAE,KAAK1C,KAAK,CAAC2C,KAAK,IAAI3C,KAAK,CAAC2C,KAAK,KAAKZ,SAAS,EAAE;MACpE3B,QAAQ,CAACwC,QAAQ,CAAC5C,KAAK,CAAC2C,KAAK,CAAC;IAChC;IACA,IAAIvC,QAAQ,CAACyC,cAAc,EAAE,KAAK7C,KAAK,CAAC8C,WAAW,IAAI9C,KAAK,CAAC8C,WAAW,KAAKf,SAAS,EAAE;MACtF3B,QAAQ,CAAC2C,cAAc,CAAC/C,KAAK,CAAC8C,WAAW,CAAC;IAC5C;IACA,IAAI1C,QAAQ,CAAC4C,YAAY,EAAE,KAAKhD,KAAK,CAACiD,SAAS,IAAIjD,KAAK,CAACiD,SAAS,KAAKlB,SAAS,EAAE;MAChF3B,QAAQ,CAAC8C,YAAY,CAAClD,KAAK,CAACiD,SAAS,CAAC;IACxC;IACA,IAAI7C,QAAQ,CAAC+C,QAAQ,EAAE,KAAKnD,KAAK,CAACoD,KAAK,IAAIpD,KAAK,CAACoD,KAAK,KAAKrB,SAAS,EAAE;MACpE3B,QAAQ,CAACiD,QAAQ,CAACrD,KAAK,CAACoD,KAAK,CAAC;IAChC;IACA,IAAIhD,QAAQ,CAACkD,YAAY,EAAE,KAAKtD,KAAK,CAACuD,SAAS,IAAIvD,KAAK,CAACuD,SAAS,KAAKxB,SAAS,EAAE;MAChF3B,QAAQ,CAACoD,YAAY,CAACxD,KAAK,CAACuD,SAAS,CAAC;IACxC;IACA,IAAInD,QAAQ,CAACqD,QAAQ,EAAE,KAAKzD,KAAK,CAAC0D,KAAK,IAAI1D,KAAK,CAAC0D,KAAK,KAAK3B,SAAS,EAAE;MACpE3B,QAAQ,CAACuD,QAAQ,CAAC3D,KAAK,CAAC0D,KAAK,CAAC;IAChC;IACA,IAAItD,QAAQ,CAACwD,SAAS,EAAE,KAAK5D,KAAK,CAAC6D,MAAM,IAAI7D,KAAK,CAAC6D,MAAM,KAAK9B,SAAS,EAAE;MACvE3B,QAAQ,CAAC0D,SAAS,CAAC9D,KAAK,CAAC6D,MAAM,CAAC;IAClC;IACA,IAAIzD,QAAQ,CAAC2D,SAAS,EAAE,KAAK/D,KAAK,CAACgE,MAAM,IAAIhE,KAAK,CAACgE,MAAM,KAAKjC,SAAS,EAAE;MACvE3B,QAAQ,CAAC6D,SAAS,CAACjE,KAAK,CAACgE,MAAM,CAAC;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EACA,OAAO9D,MAAM;AACf;AAACD,EAAA,CAtFuBF,eAAe;AAAAmE,EAAA,GAAfnE,eAAe;AAwFvC,MAAMoE,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AAErBpE,eAAe,CAACqE,YAAY,GAAG;EAC7BlE,MAAM,EAAE,IAAI;EACZO,SAAS,EAAE0D,IAAI;EACfzD,SAAS,EAAEyD,IAAI;EACftD,QAAQ,EAAEsD,IAAI;EACdzC,OAAO,EAAEyC;AACX,CAAC;AAAC,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}