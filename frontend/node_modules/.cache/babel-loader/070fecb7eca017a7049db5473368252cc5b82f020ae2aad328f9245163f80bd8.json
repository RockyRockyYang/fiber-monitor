{"ast":null,"code":"var _jsxFileName = \"/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport \"./Map.css\";\nimport { useRef, useState } from 'react';\nimport Map, { NavigationControl, Source, Layer } from \"react-map-gl\";\nimport { MAPBOX_TOKEN } from './Const';\nimport GeocoderControl from './GeocoderControl';\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer, routeLayer } from './layers';\nimport EventInfo from \"./EventInfo\";\nimport useFetch from \"../Api/Api\";\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BACKEND_SERVER = \"http://localhost:5000/\";\nfunction Mapbox() {\n  _s();\n  const mapRef = useRef(null);\n  const [popupInfo, setPopupInfo] = useState(null);\n  const {\n    data: routeData,\n    loading: routeLoading,\n    error: routeFetchError\n  } = useFetch(BACKEND_SERVER + 'routes');\n  if (!routeLoading) {\n    console.log('still loading:', routeData);\n  } else {\n    console.log('load complete');\n  }\n  const onClick = event => {\n    const feature = event.features[0];\n    if (!feature) {\n      return;\n    }\n    if (feature.layer.id === 'clusters') {\n      const clusterId = feature.properties.cluster_id;\n      mapRef.current.getSource('event').getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) {\n          return;\n        }\n        mapRef.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom,\n          duration: 500\n        });\n      });\n    }\n    if (feature.layer.id === 'unclustered-point') {\n      console.log('point:', feature);\n      const coordinates = feature.geometry.coordinates.slice();\n      setPopupInfo({\n        longitude: coordinates[0],\n        latitude: coordinates[1],\n        properties: feature.properties\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [routeLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      initialViewState: {\n        longitude: -74.6,\n        latitude: 40.4,\n        zoom: 10\n      },\n      mapboxAccessToken: MAPBOX_TOKEN,\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        top: 0,\n        bottom: 0\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v12\",\n      onClick: onClick,\n      ref: mapRef,\n      interactiveLayerIds: [clusterLayer.id, unclusteredPointLayer.id],\n      children: [/*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GeocoderControl, {\n        position: \"top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Source, {\n        id: \"event\",\n        type: \"geojson\"\n        // data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n        ,\n        data: \"./data/sample.geojson\",\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n        children: [/*#__PURE__*/_jsxDEV(Layer, {\n          ...clusterLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layer, {\n          ...clusterCountLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layer, {\n          ...unclusteredPointLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Source, {\n        id: \"route\",\n        type: \"geojson\",\n        data: \"./data/route.geojson\",\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          ...routeLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), popupInfo && /*#__PURE__*/_jsxDEV(EventInfo, {\n        longitude: popupInfo.longitude,\n        latitude: popupInfo.latitude,\n        properties: popupInfo.properties,\n        onClose: () => setPopupInfo(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Mapbox, \"Y5BRJ4hDrY0lweueQywPF5A6aY0=\", false, function () {\n  return [useFetch];\n});\n_c = Mapbox;\nexport default Mapbox;\nvar _c;\n$RefreshReg$(_c, \"Mapbox\");","map":{"version":3,"names":["useRef","useState","Map","NavigationControl","Source","Layer","MAPBOX_TOKEN","GeocoderControl","clusterLayer","clusterCountLayer","unclusteredPointLayer","routeLayer","EventInfo","useFetch","Spin","jsxDEV","_jsxDEV","Fragment","_Fragment","BACKEND_SERVER","Mapbox","_s","mapRef","popupInfo","setPopupInfo","data","routeData","loading","routeLoading","error","routeFetchError","console","log","onClick","event","feature","features","layer","id","clusterId","properties","cluster_id","current","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","geometry","coordinates","duration","slice","longitude","latitude","children","tip","size","fileName","_jsxFileName","lineNumber","columnNumber","initialViewState","mapboxAccessToken","style","position","width","top","bottom","mapStyle","ref","interactiveLayerIds","type","cluster","clusterMaxZoom","clusterRadius","onClose","_c","$RefreshReg$"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/Map.js"],"sourcesContent":["import \"./Map.css\";\nimport { useRef, useState } from 'react';\nimport Map, { NavigationControl, Source, Layer } from \"react-map-gl\";\nimport { MAPBOX_TOKEN } from './Const'\nimport GeocoderControl from './GeocoderControl';\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer, routeLayer } from './layers';\nimport EventInfo from \"./EventInfo\";\nimport useFetch from \"../Api/Api\"\nimport { Spin } from 'antd';\n\n\nconst BACKEND_SERVER = \"http://localhost:5000/\"\n\nfunction Mapbox() {\n  const mapRef = useRef(null);\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const {data: routeData, loading: routeLoading, error: routeFetchError} = useFetch(BACKEND_SERVER + 'routes')\n  if (!routeLoading) {\n    console.log('still loading:', routeData)\n  } else {\n    console.log('load complete')\n  }\n\n  const onClick = event => {\n    const feature = event.features[0];\n    if (!feature) {\n      return\n    }\n    if (feature.layer.id === 'clusters') {\n      const clusterId = feature.properties.cluster_id;\n      mapRef.current.getSource('event').getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) {\n          return;\n        }\n        mapRef.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom,\n          duration: 500\n        });\n      });\n    }\n    if (feature.layer.id === 'unclustered-point') {\n      console.log('point:', feature)\n      const coordinates = feature.geometry.coordinates.slice();\n      setPopupInfo({\n        longitude: coordinates[0],\n        latitude: coordinates[1],\n        properties: feature.properties\n      });\n    }\n  };\n\n  return (\n    <>\n      {routeLoading && \n        <div>\n          <Spin tip=\"Loading\" size=\"small\"/>\n        </div>\n      }\n      <Map\n        initialViewState={{\n          longitude: -74.6,\n          latitude: 40.4,\n          zoom: 10,\n        }}\n        mapboxAccessToken={MAPBOX_TOKEN}\n        style={{ position: \"absolute\", width: \"100%\", top: 0, bottom: 0 }}\n        mapStyle=\"mapbox://styles/mapbox/streets-v12\"\n        onClick={onClick}\n        ref={mapRef}\n        interactiveLayerIds={[clusterLayer.id, unclusteredPointLayer.id]}\n      >\n        <NavigationControl position=\"top-left\" />\n        <GeocoderControl position=\"top-right\" />\n        <Source\n          id=\"event\"\n          type=\"geojson\"\n          // data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n          data = \"./data/sample.geojson\"\n          cluster={true}\n          clusterMaxZoom={14}\n          clusterRadius={50}\n        >\n          <Layer {...clusterLayer} />\n          <Layer {...clusterCountLayer} />\n          <Layer {...unclusteredPointLayer} />\n        </Source>\n        <Source\n          id=\"route\"\n          type=\"geojson\"\n          data=\"./data/route.geojson\"\n        >\n          <Layer {...routeLayer}/>\n        </Source>\n        {popupInfo && (\n          <EventInfo\n            longitude={popupInfo.longitude}\n            latitude={popupInfo.latitude}\n            properties={popupInfo.properties}\n            onClose={() => setPopupInfo(null)}\n          />\n        ) \n        }\n      </Map>\n    </>\n  );\n}\n\nexport default Mapbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}