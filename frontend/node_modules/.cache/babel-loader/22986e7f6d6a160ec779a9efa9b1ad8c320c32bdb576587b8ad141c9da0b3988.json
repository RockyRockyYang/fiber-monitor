{"ast":null,"code":"const BACKEND_SERVER = \"http://localhost:5000/\";\nexport async function fetchRoutes() {\n  const response = await fetch(BACKEND_SERVER + 'routes');\n  const data = await response.json();\n  const transformedRoute = data.res.map(route => {\n    return {\n      \"type\": \"FeatureCollection\",\n      \"features\": [{\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"name\": route.name\n        },\n        \"geometry\": route.geometry\n      }]\n    };\n  });\n  return transformedRoute;\n}","map":{"version":3,"names":["BACKEND_SERVER","fetchRoutes","response","fetch","data","json","transformedRoute","res","map","route","name","geometry"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Api/Api.js"],"sourcesContent":["const BACKEND_SERVER = \"http://localhost:5000/\"\n\nexport async function fetchRoutes() {\n  const response = await fetch(BACKEND_SERVER + 'routes')\n  const data = await response.json()\n  const transformedRoute = data.res.map((route) => {\n    return {\n      \"type\": \"FeatureCollection\",\n      \"features\": [{\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"name\": route.name,\n        },\n        \"geometry\": route.geometry\n      }]\n    }\n  })\n  return transformedRoute\n}"],"mappings":"AAAA,MAAMA,cAAc,GAAG,wBAAwB;AAE/C,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,cAAc,GAAG,QAAQ,CAAC;EACvD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,GAAG,CAACC,GAAG,CAAEC,KAAK,IAAK;IAC/C,OAAO;MACL,MAAM,EAAE,mBAAmB;MAC3B,UAAU,EAAE,CAAC;QACX,MAAM,EAAE,SAAS;QACjB,YAAY,EAAE;UACZ,MAAM,EAAEA,KAAK,CAACC;QAChB,CAAC;QACD,UAAU,EAAED,KAAK,CAACE;MACpB,CAAC;IACH,CAAC;EACH,CAAC,CAAC;EACF,OAAOL,gBAAgB;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}