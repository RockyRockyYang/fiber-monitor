{"ast":null,"code":"var _jsxFileName = \"/Users/ywang/Desktop/fiber_monitor_display/frontend/src/store/events-context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport useFetch from \"../Api/Api\";\nimport { BACKEND_SERVER } from '../Const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsContext = /*#__PURE__*/createContext({\n  events: null\n});\nexport const EventsContextProvider = props => {\n  _s();\n  const [events, setEvents] = useState(null);\n  const {\n    data: eventData,\n    loading: eventLoading\n  } = useFetch(BACKEND_SERVER + 'events');\n  useEffect(() => {\n    if (!eventLoading) {\n      if (eventData.success) {\n        const eventsGeojson = {\n          \"type\": \"FeatureCollection\",\n          \"features\": eventData.res.map(event => {\n            console.log('time:', event.time, new Date(event.time), typeof event.time);\n            return {\n              \"type\": \"Feature\",\n              \"properties\": {\n                \"event_id\": event.event_id,\n                \"time\": event.time,\n                \"Port\": event.port,\n                \"event_type\": event.event_type,\n                \"from\": event.start,\n                \"to\": event.end,\n                \"unit\": event.unit,\n                \"duration\": event.duration\n              },\n              \"geometry\": event.geometry\n            };\n          })\n        };\n        setEvents(eventsGeojson);\n      }\n    }\n  }, [eventLoading, eventData]);\n  return /*#__PURE__*/_jsxDEV(EventsContext.Provider, {\n    value: {\n      events: events\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsContextProvider, \"XjYOsQ/Y7r3+0jkZ90SW623LwxU=\", false, function () {\n  return [useFetch];\n});\n_c = EventsContextProvider;\nexport default EventsContext;\nvar _c;\n$RefreshReg$(_c, \"EventsContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useFetch","BACKEND_SERVER","jsxDEV","_jsxDEV","EventsContext","events","EventsContextProvider","props","_s","setEvents","data","eventData","loading","eventLoading","success","eventsGeojson","res","map","event","console","log","time","Date","event_id","port","event_type","start","end","unit","duration","geometry","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/store/events-context.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\nimport useFetch from \"../Api/Api\"\nimport { BACKEND_SERVER } from '../Const'\n\nexport const EventsContext = createContext({\n  events: null\n})\n\nexport const EventsContextProvider = (props) => {\n  const [events, setEvents] = useState(null)\n\n  const {data: eventData, loading: eventLoading, } = useFetch(BACKEND_SERVER + 'events')\n  useEffect(() => {\n    if (!eventLoading) {\n      if (eventData.success) {\n        const eventsGeojson = {\n          \"type\": \"FeatureCollection\",\n          \"features\": eventData.res.map((event) => {\n            console.log('time:', event.time, new Date(event.time), typeof(event.time))\n            return {\n              \"type\": \"Feature\",\n              \"properties\": {\n                \"event_id\": event.event_id,\n                \"time\": event.time,\n                \"Port\": event.port,\n                \"event_type\": event.event_type,\n                \"from\": event.start,\n                \"to\": event.end,\n                \"unit\": event.unit,\n                \"duration\": event.duration\n              },\n              \"geometry\": event.geometry\n            }\n          })\n        }\n        setEvents(eventsGeojson)\n      }\n    }\n  }, [eventLoading, eventData])\n\n  return (\n    <EventsContext.Provider\n      value = {{\n        events: events\n      }}\n    >\n      {props.children}\n    </EventsContext.Provider>\n  )\n}\n\nexport default EventsContext;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAAC;EACzCQ,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9C,MAAM,CAACH,MAAM,EAAEI,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM;IAACW,IAAI,EAAEC,SAAS;IAAEC,OAAO,EAAEC;EAAc,CAAC,GAAGb,QAAQ,CAACC,cAAc,GAAG,QAAQ,CAAC;EACtFH,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,YAAY,EAAE;MACjB,IAAIF,SAAS,CAACG,OAAO,EAAE;QACrB,MAAMC,aAAa,GAAG;UACpB,MAAM,EAAE,mBAAmB;UAC3B,UAAU,EAAEJ,SAAS,CAACK,GAAG,CAACC,GAAG,CAAEC,KAAK,IAAK;YACvCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAACG,IAAI,EAAE,IAAIC,IAAI,CAACJ,KAAK,CAACG,IAAI,CAAC,EAAE,OAAOH,KAAK,CAACG,IAAK,CAAC;YAC1E,OAAO;cACL,MAAM,EAAE,SAAS;cACjB,YAAY,EAAE;gBACZ,UAAU,EAAEH,KAAK,CAACK,QAAQ;gBAC1B,MAAM,EAAEL,KAAK,CAACG,IAAI;gBAClB,MAAM,EAAEH,KAAK,CAACM,IAAI;gBAClB,YAAY,EAAEN,KAAK,CAACO,UAAU;gBAC9B,MAAM,EAAEP,KAAK,CAACQ,KAAK;gBACnB,IAAI,EAAER,KAAK,CAACS,GAAG;gBACf,MAAM,EAAET,KAAK,CAACU,IAAI;gBAClB,UAAU,EAAEV,KAAK,CAACW;cACpB,CAAC;cACD,UAAU,EAAEX,KAAK,CAACY;YACpB,CAAC;UACH,CAAC;QACH,CAAC;QACDrB,SAAS,CAACM,aAAa,CAAC;MAC1B;IACF;EACF,CAAC,EAAE,CAACF,YAAY,EAAEF,SAAS,CAAC,CAAC;EAE7B,oBACER,OAAA,CAACC,aAAa,CAAC2B,QAAQ;IACrBC,KAAK,EAAI;MACP3B,MAAM,EAAEA;IACV,CAAE;IAAA4B,QAAA,EAED1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AAE7B,CAAC;AAAA7B,EAAA,CAzCYF,qBAAqB;EAAA,QAGmBN,QAAQ;AAAA;AAAAsC,EAAA,GAHhDhC,qBAAqB;AA2ClC,eAAeF,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}