{"ast":null,"code":"var _jsxFileName = \"/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport \"./Map.css\";\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport Map, { NavigationControl, Source, Layer } from \"react-map-gl\";\nimport { MAPBOX_TOKEN } from './MapboxConst';\nimport GeocoderControl from './GeocoderControl';\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer, routeLayer } from './layers';\nimport EventInfo from \"./EventInfo\";\nimport { Spin } from 'antd';\nimport { EventsContext } from '../../store/events-context';\nimport { RoutesContext } from '../../store/routes-context';\nimport { FiltersContext } from '../../store/filters-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Mapbox() {\n  _s();\n  const mapRef = useRef(null);\n  const [popupInfo, setPopupInfo] = useState(null);\n  const eventsCtx = useContext(EventsContext);\n  const [eventsGeojson, setEventsGeojson] = useState(null);\n  useEffect(() => {\n    if (eventsCtx.events) {\n      setEventsGeojson(eventsCtx.events);\n    }\n  }, [eventsCtx.events]);\n  const routesCtx = useContext(RoutesContext);\n  const [routesGeojson, setRoutesGeojson] = useState(null);\n  useEffect(() => {\n    if (routesCtx.routes) {\n      setRoutesGeojson(routesCtx.routes);\n    }\n  }, [routesCtx.routes]);\n  const [mapLoading, setMapLoading] = useState(true);\n  useEffect(() => {\n    if (eventsGeojson && routesGeojson) {\n      setMapLoading(false);\n    }\n  }, [eventsGeojson, routesGeojson]);\n\n  // event filter\n  const filtersCtx = useContext(FiltersContext);\n  useEffect(() => {\n    const filterDict = filtersCtx.filters;\n    if (filterDict) {\n      if ('time' in filterDict) {\n        if (!filterDict['time']) {\n          // clear\n          setEventsGeojson(eventsCtx.events);\n        } else {\n          const filteredEvents = eventsGeojson.features.filter(event => {\n            return event.properties.time >= filterDict['time'][0] && event.properties.time <= filterDict['time'][1];\n          });\n          setEventsGeojson(geojson => {\n            return {\n              ...geojson,\n              \"features\": filteredEvents\n            };\n          });\n        }\n      }\n    }\n  }, [filtersCtx.filters, eventsCtx.events, eventsGeojson]);\n  const onClick = event => {\n    const feature = event.features[0];\n    if (!feature) {\n      return;\n    }\n    if (feature.layer.id === 'clusters') {\n      const clusterId = feature.properties.cluster_id;\n      mapRef.current.getSource('event').getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) {\n          return;\n        }\n        mapRef.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom,\n          duration: 500\n        });\n      });\n    }\n    if (feature.layer.id === 'unclustered-point') {\n      // console.log('point:', feature)\n      const coordinates = feature.geometry.coordinates.slice();\n      setPopupInfo({\n        longitude: coordinates[0],\n        latitude: coordinates[1],\n        properties: feature.properties\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [mapLoading && /*#__PURE__*/_jsxDEV(Spin, {\n      tip: \"Loading\",\n      size: \"large\",\n      className: \"spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), !mapLoading && /*#__PURE__*/_jsxDEV(Map, {\n      initialViewState: {\n        longitude: -74.6,\n        latitude: 40.4,\n        zoom: 10\n      },\n      mapboxAccessToken: MAPBOX_TOKEN,\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        top: \"0\",\n        bottom: \"0\"\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v12\",\n      onClick: onClick,\n      ref: mapRef,\n      interactiveLayerIds: [clusterLayer.id, unclusteredPointLayer.id],\n      children: [/*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GeocoderControl, {\n        position: \"top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Source, {\n        id: \"route\",\n        type: \"geojson\",\n        data: routesGeojson\n        // data=\"./data/route.geojson\"\n        ,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          ...routeLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Source, {\n        id: \"event\",\n        type: \"geojson\",\n        data: eventsGeojson\n        // data = \"./data/sample.geojson\"\n        ,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n        children: [/*#__PURE__*/_jsxDEV(Layer, {\n          ...clusterLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Layer, {\n          ...clusterCountLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Layer, {\n          ...unclusteredPointLayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), popupInfo && /*#__PURE__*/_jsxDEV(EventInfo, {\n        longitude: popupInfo.longitude,\n        latitude: popupInfo.latitude,\n        properties: popupInfo.properties,\n        onClose: () => setPopupInfo(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Mapbox, \"OMknwN4oynjBRWNzdhVViwyZ3Ok=\");\n_c = Mapbox;\nexport default Mapbox;\nvar _c;\n$RefreshReg$(_c, \"Mapbox\");","map":{"version":3,"names":["useRef","useState","useEffect","useContext","Map","NavigationControl","Source","Layer","MAPBOX_TOKEN","GeocoderControl","clusterLayer","clusterCountLayer","unclusteredPointLayer","routeLayer","EventInfo","Spin","EventsContext","RoutesContext","FiltersContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Mapbox","_s","mapRef","popupInfo","setPopupInfo","eventsCtx","eventsGeojson","setEventsGeojson","events","routesCtx","routesGeojson","setRoutesGeojson","routes","mapLoading","setMapLoading","filtersCtx","filterDict","filters","filteredEvents","features","filter","event","properties","time","geojson","onClick","feature","layer","id","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","geometry","coordinates","duration","slice","longitude","latitude","children","tip","size","className","fileName","_jsxFileName","lineNumber","columnNumber","initialViewState","mapboxAccessToken","style","position","width","top","bottom","mapStyle","ref","interactiveLayerIds","type","data","cluster","clusterMaxZoom","clusterRadius","onClose","_c","$RefreshReg$"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Map/Map.js"],"sourcesContent":["import \"./Map.css\";\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport Map, { NavigationControl, Source, Layer } from \"react-map-gl\";\nimport { MAPBOX_TOKEN } from './MapboxConst'\nimport GeocoderControl from './GeocoderControl';\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer, routeLayer } from './layers';\nimport EventInfo from \"./EventInfo\";\nimport { Spin } from 'antd';\nimport { EventsContext } from '../../store/events-context'\nimport { RoutesContext } from '../../store/routes-context'\nimport { FiltersContext } from '../../store/filters-context'\n\n\nfunction Mapbox() {\n  const mapRef = useRef(null);\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const eventsCtx = useContext(EventsContext)\n  const [eventsGeojson, setEventsGeojson]= useState(null)\n  useEffect(() => {\n    if (eventsCtx.events) {\n      setEventsGeojson(eventsCtx.events)\n    }\n  }, [eventsCtx.events])\n\n  const routesCtx = useContext(RoutesContext)\n  const [routesGeojson, setRoutesGeojson]= useState(null)\n  useEffect(() => {\n    if (routesCtx.routes) {\n      setRoutesGeojson(routesCtx.routes)\n    }\n  }, [routesCtx.routes])\n\n  const [mapLoading, setMapLoading] = useState(true)\n  useEffect(() => {\n    if (eventsGeojson && routesGeojson) {\n      setMapLoading(false)\n    }\n  }, [eventsGeojson, routesGeojson]) \n\n  // event filter\n  const filtersCtx = useContext(FiltersContext)\n  useEffect(() => {\n    const filterDict = filtersCtx.filters\n    if (filterDict) {\n      if ('time' in filterDict) {\n        if (!filterDict['time']) { // clear\n          setEventsGeojson(eventsCtx.events)\n        } else {\n          const filteredEvents = eventsGeojson.features.filter((event) => {\n            return (event.properties.time >= filterDict['time'][0]  && event.properties.time <= filterDict['time'][1])\n          })\n          setEventsGeojson((geojson) => {\n            return {\n              ...geojson,\n              \"features\": filteredEvents\n            }\n          })\n        }\n      }\n    }\n  }, [filtersCtx.filters, eventsCtx.events, eventsGeojson])\n\n  const onClick = event => {\n    const feature = event.features[0];\n    if (!feature) {\n      return\n    }\n    if (feature.layer.id === 'clusters') {\n      const clusterId = feature.properties.cluster_id;\n      mapRef.current.getSource('event').getClusterExpansionZoom(clusterId, (err, zoom) => {\n        if (err) {\n          return;\n        }\n        mapRef.current.easeTo({\n          center: feature.geometry.coordinates,\n          zoom,\n          duration: 500\n        });\n      });\n    }\n    if (feature.layer.id === 'unclustered-point') {\n      // console.log('point:', feature)\n      const coordinates = feature.geometry.coordinates.slice();\n      setPopupInfo({\n        longitude: coordinates[0],\n        latitude: coordinates[1],\n        properties: feature.properties\n      });\n    }\n  };\n\n  return (\n    <>\n      {mapLoading && \n        <Spin tip=\"Loading\" size=\"large\" className=\"spin\"/>\n      }\n      {!mapLoading && \n        <Map\n          initialViewState={{\n            longitude: -74.6,\n            latitude: 40.4,\n            zoom: 10,\n          }}\n          mapboxAccessToken={MAPBOX_TOKEN}\n          style={{position: \"absolute\", width: \"100%\", top: \"0\", bottom: \"0\"}}\n          mapStyle=\"mapbox://styles/mapbox/streets-v12\"\n          onClick={onClick}\n          ref={mapRef}\n          interactiveLayerIds={[clusterLayer.id, unclusteredPointLayer.id]}\n        >\n          <NavigationControl position=\"top-left\" />\n          <GeocoderControl position=\"top-right\" />\n          <Source\n            id=\"route\"\n            type=\"geojson\"\n            data={routesGeojson}\n            // data=\"./data/route.geojson\"\n          >\n            <Layer {...routeLayer}/>\n          </Source>\n          <Source\n            id=\"event\"\n            type=\"geojson\"\n            data={eventsGeojson}\n            // data = \"./data/sample.geojson\"\n            cluster={true}\n            clusterMaxZoom={14}\n            clusterRadius={50}\n          >\n            <Layer {...clusterLayer} />\n            <Layer {...clusterCountLayer} />\n            <Layer {...unclusteredPointLayer} />\n          </Source>\n          {popupInfo && (\n            <EventInfo\n              longitude={popupInfo.longitude}\n              latitude={popupInfo.latitude}\n              properties={popupInfo.properties}\n              onClose={() => setPopupInfo(null)}\n            />\n          ) \n          }\n        </Map>\n      }\n    </>\n  );\n}\n\nexport default Mapbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}