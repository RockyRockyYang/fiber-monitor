{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useFetch(url) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(url);\n      const res_json = await response.json();\n      setData(res_json);\n    }\n    try {\n      setLoading(true);\n      fetchData();\n    } catch (e) {\n      console.error('Cannot fetch data from remote: ', e);\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n  // const response = await fetch(url)\n  // const data = await response.json()\n  // const transformedRoute = data.res.map((route) => {\n  //   return {\n  //     \"type\": \"FeatureCollection\",\n  //     \"features\": [{\n  //       \"type\": \"Feature\",\n  //       \"properties\": {\n  //         \"name\": route.name,\n  //       },\n  //       \"geometry\": route.geometry\n  //     }]\n  //   }\n  // })\n  // return transformedRoute\n}\n_s(useFetch, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","res_json","json","e","console"],"sources":["/Users/ywang/Desktop/fiber_monitor_display/frontend/src/components/Api/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useFetch(url) {\n\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(url)\n      const res_json = await response.json()\n      setData(res_json)\n    }\n    try {\n      setLoading(true)\n      fetchData()\n    } catch (e) {\n      console.error('Cannot fetch data from remote: ', e)\n      setError(e)\n    } finally {\n      setLoading(false)\n    }\n  }, [url])\n  return {data, loading, error}\n  // const response = await fetch(url)\n  // const data = await response.json()\n  // const transformedRoute = data.res.map((route) => {\n  //   return {\n  //     \"type\": \"FeatureCollection\",\n  //     \"features\": [{\n  //       \"type\": \"Feature\",\n  //       \"properties\": {\n  //         \"name\": route.name,\n  //       },\n  //       \"geometry\": route.geometry\n  //     }]\n  //   }\n  // })\n  // return transformedRoute\n}\n\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,QAAQA,CAACC,GAAG,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAeU,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;MACjC,MAAMW,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACtCT,OAAO,CAACQ,QAAQ,CAAC;IACnB;IACA,IAAI;MACFN,UAAU,CAAC,IAAI,CAAC;MAChBG,SAAS,EAAE;IACb,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVC,OAAO,CAACR,KAAK,CAAC,iCAAiC,EAAEO,CAAC,CAAC;MACnDN,QAAQ,CAACM,CAAC,CAAC;IACb,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,GAAG,CAAC,CAAC;EACT,OAAO;IAACE,IAAI;IAAEE,OAAO;IAAEE;EAAK,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACL,EAAA,CAtCQF,QAAQ;AAyCjB,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}